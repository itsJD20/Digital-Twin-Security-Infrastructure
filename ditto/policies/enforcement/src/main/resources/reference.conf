# This is the reference config file that contains all the default settings.
# Make your edits/overrides in your application.conf.

enforcement-cache-dispatcher {
  type = "Dispatcher"
  executor = "org.eclipse.ditto.internal.utils.metrics.service.executor.InstrumentedForkJoinExecutorServiceConfigurator"
  fork-join-executor {
    # Min number of threads to cap factor-based parallelism number to
    parallelism-min = 4
    # Parallelism (threads) ... ceil(available processors * factor)
    parallelism-factor = 3.0
    # Max number of threads to cap factor-based parallelism number to
    parallelism-max = 32
    parallelism-max = ${?DEFAULT_DISPATCHER_PARALLELISM_MAX}
  }
  throughput = 5
}

enforcement-dispatcher {
  type = "Dispatcher"
  executor = "org.eclipse.ditto.internal.utils.metrics.service.executor.InstrumentedForkJoinExecutorServiceConfigurator"
  fork-join-executor {
    # Min number of threads to cap factor-based parallelism number to
    parallelism-min = 4
    # Parallelism (threads) ... ceil(available processors * factor)
    parallelism-factor = 3.0
    # Max number of threads to cap factor-based parallelism number to
    parallelism-max = 32
    parallelism-max = ${?DEFAULT_DISPATCHER_PARALLELISM_MAX}
  }
  throughput = 5
}

ditto.extensions {
  pre-enforcer-provider {
    extension-class = org.eclipse.ditto.policies.enforcement.pre.PreEnforcerProvider
    extension-config {
      pre-enforcers = []
    }
  }
}

ditto.policies-enforcer-cache {
  enabled = true
  enabled = ${?DITTO_POLICIES_ENFORCER_CACHE_ENABLED}

  # how many enforcers to cache
  maximum-size = 50000
  maximum-size = ${?DITTO_POLICIES_ENFORCER_CACHE_MAX_SIZE}

  # maximum duration of inconsistency after losing a cache invalidation
  expire-after-write = 1h
  expire-after-write = ${?DITTO_POLICIES_ENFORCER_CACHE_EXPIRE_AFTER_WRITE}

  # prolonged on each cache access by that duration
  expire-after-access = 15m
  expire-after-access = ${?DITTO_POLICIES_ENFORCER_CACHE_EXPIRE_AFTER_ACCESS}
}
